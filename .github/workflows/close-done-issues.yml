# This is workflow checks a given project board every 5th minute and closes all of the issues in the 'done' column.

name: close-done-issues

# Controls when the workflow will run
on: 
  push:
  # schedule: # Workflow will run every 5th minute. 
  #   - cron: "*/5 * * * *"
  # # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:


env:
  TARGET_PROJECT: TestBacklog


jobs:
  close-done-issues:
    runs-on: ubuntu-latest
    env: 
      GITHUB_TOKEN: ${{ secrets.PROJECT_ISSUE_CLOSING_PAT }}
      OWNER: ${{ github.repository_owner }}
      PROJECT_NUMBER: 1
    steps:
      - name: Get ID of Done Status in Project
        run: |
          gh api graphql -f org=$OWNER -F number=$PROJECT_NUMBER -f query='
            query($org: String! $number: Int!) {
              organization(login: $org) {
                projectNext(number: $number) {
                  fields(first: 20) {
                    nodes {
                      id
                      name
                      settings
                    }
                  }
                }
              }
            }
          ' > project_data.json

          echo 'DONE_OPTION_ID='$(jq '.data.organization.projectNext.fields.nodes[] | select(.name== "Status")  |.settings | fromjson.options[] | select(.name=="Todo") |.id' project_data.json)
          echo $DONE_OPTION_ID
      - name: Get list of matching issues
        run: | 
          projects="$(gh api graphql -f org=$OWNER -F number=$PROJECT_NUMBER -f query='
            query($org: String! $number: Int!) {
              organization(login: $org) {
                projectNext(number: $number) {
                  items(first: 20) {
                    nodes {
                      title
                      content {
                        ... on Issue {
                          id
                          closed
                        }
                        ... on PullRequest {
                          id
                        }
                        ... on DraftIssue {
                          id
                        }

                      }
                      fieldValues(first: 20) {
                        nodes {
                          value
                          projectField{
                            name
                            settings
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          ')"

           echo 'Projects='$projects


